Bookstore Management System

"C:\Program Files\MongoDB\Server\4.4\bin\mongod.exe" --dbpath="c:\data\db"

//READ
//Browse books
db.booklist.find()


//Browse orders
db.orders.find().sort({"_id": -1})


//Search for a book
//Using the title
db.booklist.find({"title": "Phantom of Place"})
//Using the author
db.booklist.find({"author": "Gordon Butler"})
//By genre
db.booklist.find({"genre": "Fiction"})


//Search for orders
//By State
db.orders.find({"state": "California"})
//By City
db.orders.find({"city": "Los Angeles"})


//CREATE
//Add new order
1. Find product ID of book
db.booklist.find({"title": "Phantom of Place"}, {"_id" :1})
2. Add order to database
db.orders.insertOne({"_id": 424, "first_name": "Jack", "last_name": "Smithy", "order_date": "10/20/20",
"email": "jsmithy@gmail.com", "phone": "818-222-0393", "city": "Los Angeles", "country":
"United States", "product_id": 489}) 


//Add new book
1. Find last ID of booklist
db.booklist.find().sort({"_id": -1})
2. Insert book into database
db.booklist.insertOne({"_id": 500, "title": "Harry Potter and the Philosopher's Stone", "author": "J.K. rowling",
"genre": "Fantasy", "publish_date": "1997-06-26"})


//UPDATE
//Update an order
1. Find the order
db.orders.find({"email": "wholberrykt@nasa.gov"})
2.Update the order
db.orders.updateOne({"email": "wholberrykt@nasa.gov"}, {$set: {"phone": "213-666-8800"}})
3. Check order
db.orders.find({"email": "wholberrykt@nasa.gov"})


//Update a book
1. Find the book
db.booklist.find({"title": "Harry Potter and the Philosopher's Stone"})
2. Update the book info
db.booklist.updateOne({"title": "Harry Potter and the Philosopher's Stone"}, {$set: {"author": "J.K. Rowling"}})
3. Check book

//DELETE
//Delete a book
1. Find the book
db.booklist.find({"title": "A Dog of Vials"})
2. Delete book from database
db.booklist.deleteOne({"title": "A Dog of Vials"})
3. Check book
db.booklist.find({"title": "A Dog of Vials"})


//Delete an order
1. Find an order
db.orders.find({"email": "bmasserr8@soup.io"})
2. Delete order from database
db.orders.deleteOne({"email": "bmasserr8@soup.io"})
3. Check order
db.orders.find({"email": "bmasserr8@soup.io"})


//AGGREGATION
//Gross sales of books per state
db.orders.aggregate([
	{$group: {_id: "$state", GrossSales: {$sum: "$sales_amount"}}},
	{$sort: {GrossSales: -1}}
	])
	
	
//Gross sales of books per city	 by state
db.orders.aggregate([
	{$group: {_id: {state: "$state", city:"$city"}, GrossSales: {$sum: "$sales_amount"}}},
	{$sort: {GrossSales: -1}}
	])


//Most popular genres
1. Join collection together
db.orders.aggregate([
{$lookup: {
	from: "booklist",
	localField: "product_id",
	foreignField: "_id",
	as: "book_info"
	}
}])

2. Push it through pipeline to get sum
db.orders.aggregate([
{$lookup: {
	from: "booklist",
	localField: "product_id",
	foreignField: "_id",
	as: "book_info"
	}
},
{$group: {_id: "$book_info.genre", GrossSales: {$sum: "$sales_amount"}}},
{$sort: {GrossSales: -1}}
])


//Most Popular Books
db.orders.aggregate([
{$lookup: {
	from: "booklist",
	localField: "product_id",
	foreignField: "_id",
	as: "book_info"
	}
},
{$group: {_id: {title: "$book_info.title", author: "$book_info.author"}, GrossSales: {$sum: "$sales_amount"}}},
{$sort: {GrossSales: -1}}
])


//Least Popular Books
db.orders.aggregate([
{$lookup: {
	from: "booklist",
	localField: "product_id",
	foreignField: "_id",
	as: "book_info"
	}
},
{$group: {_id: {title: "$book_info.title", author: "$book_info.author"}, GrossSales: {$sum: "$sales_amount"}}},
{$sort: {GrossSales: 1}}
])


//Trending Book Genres
db.orders.aggregate([
{$lookup: {
	from: "booklist",
	localField: "product_id",
	foreignField: "_id",
	as: "book_info"
	}
},
{$match: { _id: {$gte: 950}}},
{$group: {_id: "$book_info.genre", GrossSales: {$sum: "$sales_amount"}}},
{$sort: {GrossSales: -1}}
])


//Delete everything
db.booklist.deleteMany({})
db.booklist.find()
db.orders.deleteMany({})
db.orders.find()










